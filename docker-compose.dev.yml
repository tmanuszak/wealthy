services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: wealthy-app-dev
    depends_on:
      db:
        condition: service_healthy
    environment:
      RUST_LOG: 'DEBUG'
      RUST_BACKTRACE: 'full'
      SERVER_IP: '${SERVER_IP}'
      SERVER_PORT: '${SERVER_PORT}'
      DATABASE_URL: 'postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}'
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      # Cache build artifact folders for faster builds
      - cargo-cache:/usr/local/cargo/registry  # Cache Cargo registry
      - target-cache:/usr/src/app/target       # Cache the target folder for Rust compilation
      - node-cache:/usr/src/app/node_modules   # Cache the node_modules directory
      # Bind mount source directories and build artifacts to be committed via git
      - ./src:/usr/src/app/src
      - ./static:/usr/src/app/static
      - ./package.json:/usr/src/app/package.json
      - ./package-lock.json:/usr/src/app/package-lock.json
      - ./build.rs:/usr/src/app/build.rs
      - ./postcss.config.js:/usr/src/app/postcss.config.js
      - ./tailwind.config.js:/usr/src/app/tailwind.config.js
      - ./Cargo.toml:/usr/src/app/Cargo.toml
      - ./Cargo.lock:/usr/src/app/Cargo.lock
    networks:
      - backend

  db:
    image: postgres:17
    container_name: wealthy-db-dev
    environment:
      POSTGRES_USER: '${DATABASE_USER}'
      POSTGRES_PASSWORD: '${DATABASE_PASSWORD}'
      POSTGRES_DB: '${DATABASE_NAME}'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - wealthy-db-data-dev:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - backend

volumes:
  cargo-cache:
  target-cache:
  node-cache:
  wealthy-db-data-dev:

networks:
  backend:
